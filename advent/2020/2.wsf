# Advent of Code 2020
# Day 2: Password Philosophy
# https://adventofcode.com/2020/day/2

    "@math"         import
    "@types/array"  import
    "@types/bool"   import
    "@types/string" import

    2 ^ readi retrieve neg

.validate_loop:
    '-' call readi_until # x
    ' ' call readi_until # y
    2 ^ readc retrieve   # ch
    2 ^ readc readc
    2 call string.read_line # len

    # Part 1 validity criterion
    ^3 ^3
    2 ^3 ^5 call array.count # 2 len ch
    call math.in_range # x <= count <= y
    0 retrieve + 0 swap store

    # Part 2 validity criterion
    ^3 1+ retrieve ^2 -
    ^3 1+ retrieve ^3 -
    call bool.xor
    1 retrieve + 1 swap store

    4drop 1+
    ^ jn .validate_loop

    0 retrieve printi '\n' printc
    1 retrieve printi '\n' printc
    end

# readi_until reads a number, stopping at character ch. Clobbers address
# 2.
# (ch -- n)
readi_until:
    0
.readi_until_loop:
    2 ^ readc retrieve
    ^ ^3 j= .readi_until_ret
    '0' - swap 10* +
    jmp .readi_until_loop
.readi_until_ret:
    drop 1slide ret
