# Advent of Code 2020
# Day 1: Report Repair
# https://adventofcode.com/2020/day/1

    "@array" import
    "@bool"  import

    0 call array.read_eof
    0 ^1 call array.quicksort
    ^ 2 call find_combination printi '\n' printc
    3 call find_combination printi '\n' printc
    end

# find_combination finds the combination of n numbers that sum to 2020
# and returns the product. The numbers are stored on the heap from 0 to
# len.
# (len n -- prod)
find_combination:
    0 swap # sum
    0 swap # i
# (len sum i n -- prod)
.find_combination:
    ^ jz .find_combination_base
    1- # n--
    swap
    ^3 ^2 - swap # len - n
.find_combination_loop:
    ^ retrieve   # v = nums[i]
    swap 1+ swap # i++
    # prod = .find_combination(len sum+v i n)
    ^5 ^5 ^2 + ^3 ^6 call .find_combination
    ^ jz .find_combination_loop_next # prod == 0
    * 5slide ret # prod *= v
.find_combination_loop_next:
    2drop
    ^ ^2 j< .find_combination_loop
    5drop 0 ret
.find_combination_base:
    2drop 1slide 2020 = ret # sum == 2020
