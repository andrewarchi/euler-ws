# Project Euler
# Problem 8: Largest product in a series
# https://projecteuler.net/problem=8

    1 ^ readi retrieve 1+ # n
.nonzero_loop:
    1 # len

# Read sequence, stopping when char is '0' or less
.read_loop:
    ^ ^ readc retrieve '0' -
    2dup store
    1 j< .read_loop_break
    1+
    jmp .read_loop
.read_loop_break:

    # Skip sequence if length less than n
    ^ ^2 j< .nonzero_loop_continue

    1 # i
    1 # prod

# Take the product of the first n digits
.initial_prod_loop:
    ^1 retrieve *
    swap 1+ swap
    ^1 ^4 j< .initial_prod_loop

# Take the remaining products
.sliding_prod_loop:
    0 retrieve ^1 j< .larger_prod
.sliding_prod_loop_next:
    ^1 ^3 j= .sliding_prod_loop_break
    ^1 ^4 - 1+ retrieve /
    ^1 retrieve *
    swap 1+ swap
    jmp .sliding_prod_loop
.larger_prod:
    0 ^1 store
    jmp .sliding_prod_loop_next
.sliding_prod_loop_break:
    2drop

.nonzero_loop_continue:
    retrieve jn .end
    jmp .nonzero_loop

.end:
    drop 0 retrieve printi end
