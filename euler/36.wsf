# Project Euler
# Problem 36: Double-base palindromes
# https://projecteuler.net/problem=36

    0 ^ readi retrieve 1 -
    1 0
.loop_even:
    ^1 10 call make_pal_even
    ^3 ^1 - jn .loop_even_break
    ^ ^ 2 call reverse - jz .is_pal_even
    drop
.loop_even_continue:
    swap 1 + swap
    jmp .loop_even
.is_pal_even:
    +
    jmp .loop_even_continue
.loop_even_break:
    drop swap drop 1 swap
.loop_odd:
    ^1 10 call make_pal_odd
    ^3 ^1 - jn .loop_odd_break
    ^ ^ 2 call reverse - jz .is_pal_odd
    drop
.loop_odd_continue:
    swap 1 + swap
    jmp .loop_odd
.is_pal_odd:
    +
    jmp .loop_odd_continue
.loop_odd_break:
    drop printi drop end

# (n base -- n')
reverse:
    swap 0
.reverse_loop:
    ^1 jz .reverse_ret
    ^2 * ^1 ^3 % +
    swap ^2 / swap
    jmp .reverse_loop
.reverse_ret:
    2slide ret

# (n base -- pal)
make_pal_even:
    swap ^
    jmp .reverse_loop

# (n base -- pal)
make_pal_odd:
    swap ^
    ^2 / swap
    jmp .reverse_loop
