# Project Euler
# Problem 36: Double-base palindromes
# https://projecteuler.net/problem=36

    "@int" import

    0 ^ readi retrieve 1-
    1 0
.loop_odd:
    ^1 10 call int.make_palindrome_odd
    ^3 ^1 j< .loop_odd_break
    ^ ^ 2 call int.reverse_digits j= .is_pal_odd
    drop
.loop_odd_continue:
    swap 1+ swap
    jmp .loop_odd
.is_pal_odd:
    +
    jmp .loop_odd_continue
.loop_odd_break:
    drop swap drop 1 swap
.loop_even:
    ^1 10 call int.make_palindrome_even
    ^3 ^1 j< .loop_even_break
    ^ ^ 2 call int.reverse_digits j= .is_pal_even
    drop
.loop_even_continue:
    swap 1+ swap
    jmp .loop_even
.is_pal_even:
    +
    jmp .loop_even_continue
.loop_even_break:
    drop printi 2drop end
